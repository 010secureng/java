/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.coreos.monitoring.models;

import java.util.Objects;
import java.util.Arrays;
import com.coreos.monitoring.models.V1AlertmanagerSpecContainersInnerEnvInnerValueFromConfigMapKeyRef;
import com.coreos.monitoring.models.V1AlertmanagerSpecContainersInnerEnvInnerValueFromFieldRef;
import com.coreos.monitoring.models.V1AlertmanagerSpecContainersInnerEnvInnerValueFromResourceFieldRef;
import com.coreos.monitoring.models.V1AlertmanagerSpecContainersInnerEnvInnerValueFromSecretKeyRef;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * Source for the environment variable&#39;s value. Cannot be used if value is not empty.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-01T07:02:10.169254Z[Etc/UTC]")
public class V1AlertmanagerSpecContainersInnerEnvInnerValueFrom {
  public static final String SERIALIZED_NAME_CONFIG_MAP_KEY_REF = "configMapKeyRef";
  @SerializedName(SERIALIZED_NAME_CONFIG_MAP_KEY_REF)
  private V1AlertmanagerSpecContainersInnerEnvInnerValueFromConfigMapKeyRef configMapKeyRef;

  public static final String SERIALIZED_NAME_FIELD_REF = "fieldRef";
  @SerializedName(SERIALIZED_NAME_FIELD_REF)
  private V1AlertmanagerSpecContainersInnerEnvInnerValueFromFieldRef fieldRef;

  public static final String SERIALIZED_NAME_RESOURCE_FIELD_REF = "resourceFieldRef";
  @SerializedName(SERIALIZED_NAME_RESOURCE_FIELD_REF)
  private V1AlertmanagerSpecContainersInnerEnvInnerValueFromResourceFieldRef resourceFieldRef;

  public static final String SERIALIZED_NAME_SECRET_KEY_REF = "secretKeyRef";
  @SerializedName(SERIALIZED_NAME_SECRET_KEY_REF)
  private V1AlertmanagerSpecContainersInnerEnvInnerValueFromSecretKeyRef secretKeyRef;

  public V1AlertmanagerSpecContainersInnerEnvInnerValueFrom() {
  }

  public V1AlertmanagerSpecContainersInnerEnvInnerValueFrom configMapKeyRef(V1AlertmanagerSpecContainersInnerEnvInnerValueFromConfigMapKeyRef configMapKeyRef) {
    
    this.configMapKeyRef = configMapKeyRef;
    return this;
  }

   /**
   * Get configMapKeyRef
   * @return configMapKeyRef
  **/
  @jakarta.annotation.Nullable
  public V1AlertmanagerSpecContainersInnerEnvInnerValueFromConfigMapKeyRef getConfigMapKeyRef() {
    return configMapKeyRef;
  }


  public void setConfigMapKeyRef(V1AlertmanagerSpecContainersInnerEnvInnerValueFromConfigMapKeyRef configMapKeyRef) {
    this.configMapKeyRef = configMapKeyRef;
  }


  public V1AlertmanagerSpecContainersInnerEnvInnerValueFrom fieldRef(V1AlertmanagerSpecContainersInnerEnvInnerValueFromFieldRef fieldRef) {
    
    this.fieldRef = fieldRef;
    return this;
  }

   /**
   * Get fieldRef
   * @return fieldRef
  **/
  @jakarta.annotation.Nullable
  public V1AlertmanagerSpecContainersInnerEnvInnerValueFromFieldRef getFieldRef() {
    return fieldRef;
  }


  public void setFieldRef(V1AlertmanagerSpecContainersInnerEnvInnerValueFromFieldRef fieldRef) {
    this.fieldRef = fieldRef;
  }


  public V1AlertmanagerSpecContainersInnerEnvInnerValueFrom resourceFieldRef(V1AlertmanagerSpecContainersInnerEnvInnerValueFromResourceFieldRef resourceFieldRef) {
    
    this.resourceFieldRef = resourceFieldRef;
    return this;
  }

   /**
   * Get resourceFieldRef
   * @return resourceFieldRef
  **/
  @jakarta.annotation.Nullable
  public V1AlertmanagerSpecContainersInnerEnvInnerValueFromResourceFieldRef getResourceFieldRef() {
    return resourceFieldRef;
  }


  public void setResourceFieldRef(V1AlertmanagerSpecContainersInnerEnvInnerValueFromResourceFieldRef resourceFieldRef) {
    this.resourceFieldRef = resourceFieldRef;
  }


  public V1AlertmanagerSpecContainersInnerEnvInnerValueFrom secretKeyRef(V1AlertmanagerSpecContainersInnerEnvInnerValueFromSecretKeyRef secretKeyRef) {
    
    this.secretKeyRef = secretKeyRef;
    return this;
  }

   /**
   * Get secretKeyRef
   * @return secretKeyRef
  **/
  @jakarta.annotation.Nullable
  public V1AlertmanagerSpecContainersInnerEnvInnerValueFromSecretKeyRef getSecretKeyRef() {
    return secretKeyRef;
  }


  public void setSecretKeyRef(V1AlertmanagerSpecContainersInnerEnvInnerValueFromSecretKeyRef secretKeyRef) {
    this.secretKeyRef = secretKeyRef;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1AlertmanagerSpecContainersInnerEnvInnerValueFrom v1AlertmanagerSpecContainersInnerEnvInnerValueFrom = (V1AlertmanagerSpecContainersInnerEnvInnerValueFrom) o;
    return Objects.equals(this.configMapKeyRef, v1AlertmanagerSpecContainersInnerEnvInnerValueFrom.configMapKeyRef) &&
        Objects.equals(this.fieldRef, v1AlertmanagerSpecContainersInnerEnvInnerValueFrom.fieldRef) &&
        Objects.equals(this.resourceFieldRef, v1AlertmanagerSpecContainersInnerEnvInnerValueFrom.resourceFieldRef) &&
        Objects.equals(this.secretKeyRef, v1AlertmanagerSpecContainersInnerEnvInnerValueFrom.secretKeyRef);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configMapKeyRef, fieldRef, resourceFieldRef, secretKeyRef);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1AlertmanagerSpecContainersInnerEnvInnerValueFrom {\n");
    sb.append("    configMapKeyRef: ").append(toIndentedString(configMapKeyRef)).append("\n");
    sb.append("    fieldRef: ").append(toIndentedString(fieldRef)).append("\n");
    sb.append("    resourceFieldRef: ").append(toIndentedString(resourceFieldRef)).append("\n");
    sb.append("    secretKeyRef: ").append(toIndentedString(secretKeyRef)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("configMapKeyRef");
    openapiFields.add("fieldRef");
    openapiFields.add("resourceFieldRef");
    openapiFields.add("secretKeyRef");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1AlertmanagerSpecContainersInnerEnvInnerValueFrom
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1AlertmanagerSpecContainersInnerEnvInnerValueFrom.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1AlertmanagerSpecContainersInnerEnvInnerValueFrom is not found in the empty JSON string", V1AlertmanagerSpecContainersInnerEnvInnerValueFrom.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1AlertmanagerSpecContainersInnerEnvInnerValueFrom.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1AlertmanagerSpecContainersInnerEnvInnerValueFrom` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `configMapKeyRef`
      if (jsonObj.get("configMapKeyRef") != null && !jsonObj.get("configMapKeyRef").isJsonNull()) {
        V1AlertmanagerSpecContainersInnerEnvInnerValueFromConfigMapKeyRef.validateJsonObject(jsonObj.getAsJsonObject("configMapKeyRef"));
      }
      // validate the optional field `fieldRef`
      if (jsonObj.get("fieldRef") != null && !jsonObj.get("fieldRef").isJsonNull()) {
        V1AlertmanagerSpecContainersInnerEnvInnerValueFromFieldRef.validateJsonObject(jsonObj.getAsJsonObject("fieldRef"));
      }
      // validate the optional field `resourceFieldRef`
      if (jsonObj.get("resourceFieldRef") != null && !jsonObj.get("resourceFieldRef").isJsonNull()) {
        V1AlertmanagerSpecContainersInnerEnvInnerValueFromResourceFieldRef.validateJsonObject(jsonObj.getAsJsonObject("resourceFieldRef"));
      }
      // validate the optional field `secretKeyRef`
      if (jsonObj.get("secretKeyRef") != null && !jsonObj.get("secretKeyRef").isJsonNull()) {
        V1AlertmanagerSpecContainersInnerEnvInnerValueFromSecretKeyRef.validateJsonObject(jsonObj.getAsJsonObject("secretKeyRef"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1AlertmanagerSpecContainersInnerEnvInnerValueFrom.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1AlertmanagerSpecContainersInnerEnvInnerValueFrom' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1AlertmanagerSpecContainersInnerEnvInnerValueFrom> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1AlertmanagerSpecContainersInnerEnvInnerValueFrom.class));

       return (TypeAdapter<T>) new TypeAdapter<V1AlertmanagerSpecContainersInnerEnvInnerValueFrom>() {
           @Override
           public void write(JsonWriter out, V1AlertmanagerSpecContainersInnerEnvInnerValueFrom value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1AlertmanagerSpecContainersInnerEnvInnerValueFrom read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1AlertmanagerSpecContainersInnerEnvInnerValueFrom given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1AlertmanagerSpecContainersInnerEnvInnerValueFrom
  * @throws IOException if the JSON string is invalid with respect to V1AlertmanagerSpecContainersInnerEnvInnerValueFrom
  */
  public static V1AlertmanagerSpecContainersInnerEnvInnerValueFrom fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1AlertmanagerSpecContainersInnerEnvInnerValueFrom.class);
  }

 /**
  * Convert an instance of V1AlertmanagerSpecContainersInnerEnvInnerValueFrom to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

