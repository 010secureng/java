/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.coreos.monitoring.models;

import java.util.Objects;
import java.util.Arrays;
import com.coreos.monitoring.models.V1PrometheusSpecRemoteWriteInnerSigv4AccessKey;
import com.coreos.monitoring.models.V1PrometheusSpecRemoteWriteInnerSigv4SecretKey;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * Sigv4 allows to configures AWS&#39;s Signature Verification 4
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-01T07:02:10.169254Z[Etc/UTC]")
public class V1PrometheusSpecRemoteWriteInnerSigv4 {
  public static final String SERIALIZED_NAME_ACCESS_KEY = "accessKey";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY)
  private V1PrometheusSpecRemoteWriteInnerSigv4AccessKey accessKey;

  public static final String SERIALIZED_NAME_PROFILE = "profile";
  @SerializedName(SERIALIZED_NAME_PROFILE)
  private String profile;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_ROLE_ARN = "roleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_SECRET_KEY = "secretKey";
  @SerializedName(SERIALIZED_NAME_SECRET_KEY)
  private V1PrometheusSpecRemoteWriteInnerSigv4SecretKey secretKey;

  public V1PrometheusSpecRemoteWriteInnerSigv4() {
  }

  public V1PrometheusSpecRemoteWriteInnerSigv4 accessKey(V1PrometheusSpecRemoteWriteInnerSigv4AccessKey accessKey) {
    
    this.accessKey = accessKey;
    return this;
  }

   /**
   * Get accessKey
   * @return accessKey
  **/
  @jakarta.annotation.Nullable
  public V1PrometheusSpecRemoteWriteInnerSigv4AccessKey getAccessKey() {
    return accessKey;
  }


  public void setAccessKey(V1PrometheusSpecRemoteWriteInnerSigv4AccessKey accessKey) {
    this.accessKey = accessKey;
  }


  public V1PrometheusSpecRemoteWriteInnerSigv4 profile(String profile) {
    
    this.profile = profile;
    return this;
  }

   /**
   * Profile is the named AWS profile used to authenticate.
   * @return profile
  **/
  @jakarta.annotation.Nullable
  public String getProfile() {
    return profile;
  }


  public void setProfile(String profile) {
    this.profile = profile;
  }


  public V1PrometheusSpecRemoteWriteInnerSigv4 region(String region) {
    
    this.region = region;
    return this;
  }

   /**
   * Region is the AWS region. If blank, the region from the default credentials chain used.
   * @return region
  **/
  @jakarta.annotation.Nullable
  public String getRegion() {
    return region;
  }


  public void setRegion(String region) {
    this.region = region;
  }


  public V1PrometheusSpecRemoteWriteInnerSigv4 roleArn(String roleArn) {
    
    this.roleArn = roleArn;
    return this;
  }

   /**
   * RoleArn is the named AWS profile used to authenticate.
   * @return roleArn
  **/
  @jakarta.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }


  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public V1PrometheusSpecRemoteWriteInnerSigv4 secretKey(V1PrometheusSpecRemoteWriteInnerSigv4SecretKey secretKey) {
    
    this.secretKey = secretKey;
    return this;
  }

   /**
   * Get secretKey
   * @return secretKey
  **/
  @jakarta.annotation.Nullable
  public V1PrometheusSpecRemoteWriteInnerSigv4SecretKey getSecretKey() {
    return secretKey;
  }


  public void setSecretKey(V1PrometheusSpecRemoteWriteInnerSigv4SecretKey secretKey) {
    this.secretKey = secretKey;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1PrometheusSpecRemoteWriteInnerSigv4 v1PrometheusSpecRemoteWriteInnerSigv4 = (V1PrometheusSpecRemoteWriteInnerSigv4) o;
    return Objects.equals(this.accessKey, v1PrometheusSpecRemoteWriteInnerSigv4.accessKey) &&
        Objects.equals(this.profile, v1PrometheusSpecRemoteWriteInnerSigv4.profile) &&
        Objects.equals(this.region, v1PrometheusSpecRemoteWriteInnerSigv4.region) &&
        Objects.equals(this.roleArn, v1PrometheusSpecRemoteWriteInnerSigv4.roleArn) &&
        Objects.equals(this.secretKey, v1PrometheusSpecRemoteWriteInnerSigv4.secretKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKey, profile, region, roleArn, secretKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1PrometheusSpecRemoteWriteInnerSigv4 {\n");
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    secretKey: ").append(toIndentedString(secretKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessKey");
    openapiFields.add("profile");
    openapiFields.add("region");
    openapiFields.add("roleArn");
    openapiFields.add("secretKey");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1PrometheusSpecRemoteWriteInnerSigv4
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1PrometheusSpecRemoteWriteInnerSigv4.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1PrometheusSpecRemoteWriteInnerSigv4 is not found in the empty JSON string", V1PrometheusSpecRemoteWriteInnerSigv4.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1PrometheusSpecRemoteWriteInnerSigv4.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1PrometheusSpecRemoteWriteInnerSigv4` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `accessKey`
      if (jsonObj.get("accessKey") != null && !jsonObj.get("accessKey").isJsonNull()) {
        V1PrometheusSpecRemoteWriteInnerSigv4AccessKey.validateJsonObject(jsonObj.getAsJsonObject("accessKey"));
      }
      if ((jsonObj.get("profile") != null && !jsonObj.get("profile").isJsonNull()) && !jsonObj.get("profile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("roleArn") != null && !jsonObj.get("roleArn").isJsonNull()) && !jsonObj.get("roleArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `roleArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("roleArn").toString()));
      }
      // validate the optional field `secretKey`
      if (jsonObj.get("secretKey") != null && !jsonObj.get("secretKey").isJsonNull()) {
        V1PrometheusSpecRemoteWriteInnerSigv4SecretKey.validateJsonObject(jsonObj.getAsJsonObject("secretKey"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1PrometheusSpecRemoteWriteInnerSigv4.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1PrometheusSpecRemoteWriteInnerSigv4' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1PrometheusSpecRemoteWriteInnerSigv4> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1PrometheusSpecRemoteWriteInnerSigv4.class));

       return (TypeAdapter<T>) new TypeAdapter<V1PrometheusSpecRemoteWriteInnerSigv4>() {
           @Override
           public void write(JsonWriter out, V1PrometheusSpecRemoteWriteInnerSigv4 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1PrometheusSpecRemoteWriteInnerSigv4 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1PrometheusSpecRemoteWriteInnerSigv4 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1PrometheusSpecRemoteWriteInnerSigv4
  * @throws IOException if the JSON string is invalid with respect to V1PrometheusSpecRemoteWriteInnerSigv4
  */
  public static V1PrometheusSpecRemoteWriteInnerSigv4 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1PrometheusSpecRemoteWriteInnerSigv4.class);
  }

 /**
  * Convert an instance of V1PrometheusSpecRemoteWriteInnerSigv4 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

