/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.coreos.monitoring.models;

import java.util.Objects;
import java.util.Arrays;
import com.coreos.monitoring.models.V1PodMonitorSpecPodMetricsEndpointsInnerAuthorization;
import com.coreos.monitoring.models.V1PodMonitorSpecPodMetricsEndpointsInnerBasicAuth;
import com.coreos.monitoring.models.V1PodMonitorSpecPodMetricsEndpointsInnerBearerTokenSecret;
import com.coreos.monitoring.models.V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner;
import com.coreos.monitoring.models.V1PodMonitorSpecPodMetricsEndpointsInnerOauth2;
import com.coreos.monitoring.models.V1PodMonitorSpecPodMetricsEndpointsInnerTlsConfig;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * PodMetricsEndpoint defines a scrapeable endpoint of a Kubernetes Pod serving Prometheus metrics.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-01T07:02:10.169254Z[Etc/UTC]")
public class V1PodMonitorSpecPodMetricsEndpointsInner {
  public static final String SERIALIZED_NAME_AUTHORIZATION = "authorization";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION)
  private V1PodMonitorSpecPodMetricsEndpointsInnerAuthorization authorization;

  public static final String SERIALIZED_NAME_BASIC_AUTH = "basicAuth";
  @SerializedName(SERIALIZED_NAME_BASIC_AUTH)
  private V1PodMonitorSpecPodMetricsEndpointsInnerBasicAuth basicAuth;

  public static final String SERIALIZED_NAME_BEARER_TOKEN_SECRET = "bearerTokenSecret";
  @SerializedName(SERIALIZED_NAME_BEARER_TOKEN_SECRET)
  private V1PodMonitorSpecPodMetricsEndpointsInnerBearerTokenSecret bearerTokenSecret;

  public static final String SERIALIZED_NAME_ENABLE_HTTP2 = "enableHttp2";
  @SerializedName(SERIALIZED_NAME_ENABLE_HTTP2)
  private Boolean enableHttp2;

  public static final String SERIALIZED_NAME_FILTER_RUNNING = "filterRunning";
  @SerializedName(SERIALIZED_NAME_FILTER_RUNNING)
  private Boolean filterRunning;

  public static final String SERIALIZED_NAME_FOLLOW_REDIRECTS = "followRedirects";
  @SerializedName(SERIALIZED_NAME_FOLLOW_REDIRECTS)
  private Boolean followRedirects;

  public static final String SERIALIZED_NAME_HONOR_LABELS = "honorLabels";
  @SerializedName(SERIALIZED_NAME_HONOR_LABELS)
  private Boolean honorLabels;

  public static final String SERIALIZED_NAME_HONOR_TIMESTAMPS = "honorTimestamps";
  @SerializedName(SERIALIZED_NAME_HONOR_TIMESTAMPS)
  private Boolean honorTimestamps;

  public static final String SERIALIZED_NAME_INTERVAL = "interval";
  @SerializedName(SERIALIZED_NAME_INTERVAL)
  private String interval;

  public static final String SERIALIZED_NAME_METRIC_RELABELINGS = "metricRelabelings";
  @SerializedName(SERIALIZED_NAME_METRIC_RELABELINGS)
  private List<V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner> metricRelabelings;

  public static final String SERIALIZED_NAME_OAUTH2 = "oauth2";
  @SerializedName(SERIALIZED_NAME_OAUTH2)
  private V1PodMonitorSpecPodMetricsEndpointsInnerOauth2 oauth2;

  public static final String SERIALIZED_NAME_PARAMS = "params";
  @SerializedName(SERIALIZED_NAME_PARAMS)
  private Map<String, List<String>> params = new HashMap<>();

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private String port;

  public static final String SERIALIZED_NAME_PROXY_URL = "proxyUrl";
  @SerializedName(SERIALIZED_NAME_PROXY_URL)
  private String proxyUrl;

  public static final String SERIALIZED_NAME_RELABELINGS = "relabelings";
  @SerializedName(SERIALIZED_NAME_RELABELINGS)
  private List<V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner> relabelings;

  /**
   * HTTP scheme to use for scraping. &#x60;http&#x60; and &#x60;https&#x60; are the expected values unless you rewrite the &#x60;__scheme__&#x60; label via relabeling. If empty, Prometheus uses the default value &#x60;http&#x60;.
   */
  @JsonAdapter(SchemeEnum.Adapter.class)
  public enum SchemeEnum {
    HTTP("http"),
    
    HTTPS("https");

    private String value;

    SchemeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SchemeEnum fromValue(String value) {
      for (SchemeEnum b : SchemeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SchemeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SchemeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SchemeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SchemeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SCHEME = "scheme";
  @SerializedName(SERIALIZED_NAME_SCHEME)
  private SchemeEnum scheme;

  public static final String SERIALIZED_NAME_SCRAPE_TIMEOUT = "scrapeTimeout";
  @SerializedName(SERIALIZED_NAME_SCRAPE_TIMEOUT)
  private String scrapeTimeout;

  public static final String SERIALIZED_NAME_TARGET_PORT = "targetPort";
  @SerializedName(SERIALIZED_NAME_TARGET_PORT)
  private Object targetPort;

  public static final String SERIALIZED_NAME_TLS_CONFIG = "tlsConfig";
  @SerializedName(SERIALIZED_NAME_TLS_CONFIG)
  private V1PodMonitorSpecPodMetricsEndpointsInnerTlsConfig tlsConfig;

  public V1PodMonitorSpecPodMetricsEndpointsInner() {
  }

  public V1PodMonitorSpecPodMetricsEndpointsInner authorization(V1PodMonitorSpecPodMetricsEndpointsInnerAuthorization authorization) {
    
    this.authorization = authorization;
    return this;
  }

   /**
   * Get authorization
   * @return authorization
  **/
  @jakarta.annotation.Nullable
  public V1PodMonitorSpecPodMetricsEndpointsInnerAuthorization getAuthorization() {
    return authorization;
  }


  public void setAuthorization(V1PodMonitorSpecPodMetricsEndpointsInnerAuthorization authorization) {
    this.authorization = authorization;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner basicAuth(V1PodMonitorSpecPodMetricsEndpointsInnerBasicAuth basicAuth) {
    
    this.basicAuth = basicAuth;
    return this;
  }

   /**
   * Get basicAuth
   * @return basicAuth
  **/
  @jakarta.annotation.Nullable
  public V1PodMonitorSpecPodMetricsEndpointsInnerBasicAuth getBasicAuth() {
    return basicAuth;
  }


  public void setBasicAuth(V1PodMonitorSpecPodMetricsEndpointsInnerBasicAuth basicAuth) {
    this.basicAuth = basicAuth;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner bearerTokenSecret(V1PodMonitorSpecPodMetricsEndpointsInnerBearerTokenSecret bearerTokenSecret) {
    
    this.bearerTokenSecret = bearerTokenSecret;
    return this;
  }

   /**
   * Get bearerTokenSecret
   * @return bearerTokenSecret
  **/
  @jakarta.annotation.Nullable
  public V1PodMonitorSpecPodMetricsEndpointsInnerBearerTokenSecret getBearerTokenSecret() {
    return bearerTokenSecret;
  }


  public void setBearerTokenSecret(V1PodMonitorSpecPodMetricsEndpointsInnerBearerTokenSecret bearerTokenSecret) {
    this.bearerTokenSecret = bearerTokenSecret;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner enableHttp2(Boolean enableHttp2) {
    
    this.enableHttp2 = enableHttp2;
    return this;
  }

   /**
   * Whether to enable HTTP2.
   * @return enableHttp2
  **/
  @jakarta.annotation.Nullable
  public Boolean getEnableHttp2() {
    return enableHttp2;
  }


  public void setEnableHttp2(Boolean enableHttp2) {
    this.enableHttp2 = enableHttp2;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner filterRunning(Boolean filterRunning) {
    
    this.filterRunning = filterRunning;
    return this;
  }

   /**
   * Drop pods that are not running. (Failed, Succeeded). Enabled by default. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase
   * @return filterRunning
  **/
  @jakarta.annotation.Nullable
  public Boolean getFilterRunning() {
    return filterRunning;
  }


  public void setFilterRunning(Boolean filterRunning) {
    this.filterRunning = filterRunning;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner followRedirects(Boolean followRedirects) {
    
    this.followRedirects = followRedirects;
    return this;
  }

   /**
   * FollowRedirects configures whether scrape requests follow HTTP 3xx redirects.
   * @return followRedirects
  **/
  @jakarta.annotation.Nullable
  public Boolean getFollowRedirects() {
    return followRedirects;
  }


  public void setFollowRedirects(Boolean followRedirects) {
    this.followRedirects = followRedirects;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner honorLabels(Boolean honorLabels) {
    
    this.honorLabels = honorLabels;
    return this;
  }

   /**
   * HonorLabels chooses the metric&#39;s labels on collisions with target labels.
   * @return honorLabels
  **/
  @jakarta.annotation.Nullable
  public Boolean getHonorLabels() {
    return honorLabels;
  }


  public void setHonorLabels(Boolean honorLabels) {
    this.honorLabels = honorLabels;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner honorTimestamps(Boolean honorTimestamps) {
    
    this.honorTimestamps = honorTimestamps;
    return this;
  }

   /**
   * HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data.
   * @return honorTimestamps
  **/
  @jakarta.annotation.Nullable
  public Boolean getHonorTimestamps() {
    return honorTimestamps;
  }


  public void setHonorTimestamps(Boolean honorTimestamps) {
    this.honorTimestamps = honorTimestamps;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner interval(String interval) {
    
    this.interval = interval;
    return this;
  }

   /**
   * Interval at which metrics should be scraped If not specified Prometheus&#39; global scrape interval is used.
   * @return interval
  **/
  @jakarta.annotation.Nullable
  public String getInterval() {
    return interval;
  }


  public void setInterval(String interval) {
    this.interval = interval;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner metricRelabelings(List<V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner> metricRelabelings) {
    
    this.metricRelabelings = metricRelabelings;
    return this;
  }

  public V1PodMonitorSpecPodMetricsEndpointsInner addMetricRelabelingsItem(V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner metricRelabelingsItem) {
    if (this.metricRelabelings == null) {
      this.metricRelabelings = new ArrayList<>();
    }
    this.metricRelabelings.add(metricRelabelingsItem);
    return this;
  }

   /**
   * MetricRelabelConfigs to apply to samples before ingestion.
   * @return metricRelabelings
  **/
  @jakarta.annotation.Nullable
  public List<V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner> getMetricRelabelings() {
    return metricRelabelings;
  }


  public void setMetricRelabelings(List<V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner> metricRelabelings) {
    this.metricRelabelings = metricRelabelings;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner oauth2(V1PodMonitorSpecPodMetricsEndpointsInnerOauth2 oauth2) {
    
    this.oauth2 = oauth2;
    return this;
  }

   /**
   * Get oauth2
   * @return oauth2
  **/
  @jakarta.annotation.Nullable
  public V1PodMonitorSpecPodMetricsEndpointsInnerOauth2 getOauth2() {
    return oauth2;
  }


  public void setOauth2(V1PodMonitorSpecPodMetricsEndpointsInnerOauth2 oauth2) {
    this.oauth2 = oauth2;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner params(Map<String, List<String>> params) {
    
    this.params = params;
    return this;
  }

  public V1PodMonitorSpecPodMetricsEndpointsInner putParamsItem(String key, List<String> paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

   /**
   * Optional HTTP URL parameters
   * @return params
  **/
  @jakarta.annotation.Nullable
  public Map<String, List<String>> getParams() {
    return params;
  }


  public void setParams(Map<String, List<String>> params) {
    this.params = params;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * HTTP path to scrape for metrics. If empty, Prometheus uses the default value (e.g. &#x60;/metrics&#x60;).
   * @return path
  **/
  @jakarta.annotation.Nullable
  public String getPath() {
    return path;
  }


  public void setPath(String path) {
    this.path = path;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner port(String port) {
    
    this.port = port;
    return this;
  }

   /**
   * Name of the pod port this endpoint refers to. Mutually exclusive with targetPort.
   * @return port
  **/
  @jakarta.annotation.Nullable
  public String getPort() {
    return port;
  }


  public void setPort(String port) {
    this.port = port;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner proxyUrl(String proxyUrl) {
    
    this.proxyUrl = proxyUrl;
    return this;
  }

   /**
   * ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.
   * @return proxyUrl
  **/
  @jakarta.annotation.Nullable
  public String getProxyUrl() {
    return proxyUrl;
  }


  public void setProxyUrl(String proxyUrl) {
    this.proxyUrl = proxyUrl;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner relabelings(List<V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner> relabelings) {
    
    this.relabelings = relabelings;
    return this;
  }

  public V1PodMonitorSpecPodMetricsEndpointsInner addRelabelingsItem(V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner relabelingsItem) {
    if (this.relabelings == null) {
      this.relabelings = new ArrayList<>();
    }
    this.relabelings.add(relabelingsItem);
    return this;
  }

   /**
   * RelabelConfigs to apply to samples before scraping. Prometheus Operator automatically adds relabelings for a few standard Kubernetes fields. The original scrape job&#39;s name is available via the &#x60;__tmp_prometheus_job_name&#x60; label. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
   * @return relabelings
  **/
  @jakarta.annotation.Nullable
  public List<V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner> getRelabelings() {
    return relabelings;
  }


  public void setRelabelings(List<V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner> relabelings) {
    this.relabelings = relabelings;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner scheme(SchemeEnum scheme) {
    
    this.scheme = scheme;
    return this;
  }

   /**
   * HTTP scheme to use for scraping. &#x60;http&#x60; and &#x60;https&#x60; are the expected values unless you rewrite the &#x60;__scheme__&#x60; label via relabeling. If empty, Prometheus uses the default value &#x60;http&#x60;.
   * @return scheme
  **/
  @jakarta.annotation.Nullable
  public SchemeEnum getScheme() {
    return scheme;
  }


  public void setScheme(SchemeEnum scheme) {
    this.scheme = scheme;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner scrapeTimeout(String scrapeTimeout) {
    
    this.scrapeTimeout = scrapeTimeout;
    return this;
  }

   /**
   * Timeout after which the scrape is ended If not specified, the Prometheus global scrape interval is used.
   * @return scrapeTimeout
  **/
  @jakarta.annotation.Nullable
  public String getScrapeTimeout() {
    return scrapeTimeout;
  }


  public void setScrapeTimeout(String scrapeTimeout) {
    this.scrapeTimeout = scrapeTimeout;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner targetPort(Object targetPort) {
    
    this.targetPort = targetPort;
    return this;
  }

   /**
   * Deprecated: Use &#39;port&#39; instead.
   * @return targetPort
  **/
  @jakarta.annotation.Nullable
  public Object getTargetPort() {
    return targetPort;
  }


  public void setTargetPort(Object targetPort) {
    this.targetPort = targetPort;
  }


  public V1PodMonitorSpecPodMetricsEndpointsInner tlsConfig(V1PodMonitorSpecPodMetricsEndpointsInnerTlsConfig tlsConfig) {
    
    this.tlsConfig = tlsConfig;
    return this;
  }

   /**
   * Get tlsConfig
   * @return tlsConfig
  **/
  @jakarta.annotation.Nullable
  public V1PodMonitorSpecPodMetricsEndpointsInnerTlsConfig getTlsConfig() {
    return tlsConfig;
  }


  public void setTlsConfig(V1PodMonitorSpecPodMetricsEndpointsInnerTlsConfig tlsConfig) {
    this.tlsConfig = tlsConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1PodMonitorSpecPodMetricsEndpointsInner v1PodMonitorSpecPodMetricsEndpointsInner = (V1PodMonitorSpecPodMetricsEndpointsInner) o;
    return Objects.equals(this.authorization, v1PodMonitorSpecPodMetricsEndpointsInner.authorization) &&
        Objects.equals(this.basicAuth, v1PodMonitorSpecPodMetricsEndpointsInner.basicAuth) &&
        Objects.equals(this.bearerTokenSecret, v1PodMonitorSpecPodMetricsEndpointsInner.bearerTokenSecret) &&
        Objects.equals(this.enableHttp2, v1PodMonitorSpecPodMetricsEndpointsInner.enableHttp2) &&
        Objects.equals(this.filterRunning, v1PodMonitorSpecPodMetricsEndpointsInner.filterRunning) &&
        Objects.equals(this.followRedirects, v1PodMonitorSpecPodMetricsEndpointsInner.followRedirects) &&
        Objects.equals(this.honorLabels, v1PodMonitorSpecPodMetricsEndpointsInner.honorLabels) &&
        Objects.equals(this.honorTimestamps, v1PodMonitorSpecPodMetricsEndpointsInner.honorTimestamps) &&
        Objects.equals(this.interval, v1PodMonitorSpecPodMetricsEndpointsInner.interval) &&
        Objects.equals(this.metricRelabelings, v1PodMonitorSpecPodMetricsEndpointsInner.metricRelabelings) &&
        Objects.equals(this.oauth2, v1PodMonitorSpecPodMetricsEndpointsInner.oauth2) &&
        Objects.equals(this.params, v1PodMonitorSpecPodMetricsEndpointsInner.params) &&
        Objects.equals(this.path, v1PodMonitorSpecPodMetricsEndpointsInner.path) &&
        Objects.equals(this.port, v1PodMonitorSpecPodMetricsEndpointsInner.port) &&
        Objects.equals(this.proxyUrl, v1PodMonitorSpecPodMetricsEndpointsInner.proxyUrl) &&
        Objects.equals(this.relabelings, v1PodMonitorSpecPodMetricsEndpointsInner.relabelings) &&
        Objects.equals(this.scheme, v1PodMonitorSpecPodMetricsEndpointsInner.scheme) &&
        Objects.equals(this.scrapeTimeout, v1PodMonitorSpecPodMetricsEndpointsInner.scrapeTimeout) &&
        Objects.equals(this.targetPort, v1PodMonitorSpecPodMetricsEndpointsInner.targetPort) &&
        Objects.equals(this.tlsConfig, v1PodMonitorSpecPodMetricsEndpointsInner.tlsConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorization, basicAuth, bearerTokenSecret, enableHttp2, filterRunning, followRedirects, honorLabels, honorTimestamps, interval, metricRelabelings, oauth2, params, path, port, proxyUrl, relabelings, scheme, scrapeTimeout, targetPort, tlsConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1PodMonitorSpecPodMetricsEndpointsInner {\n");
    sb.append("    authorization: ").append(toIndentedString(authorization)).append("\n");
    sb.append("    basicAuth: ").append(toIndentedString(basicAuth)).append("\n");
    sb.append("    bearerTokenSecret: ").append(toIndentedString(bearerTokenSecret)).append("\n");
    sb.append("    enableHttp2: ").append(toIndentedString(enableHttp2)).append("\n");
    sb.append("    filterRunning: ").append(toIndentedString(filterRunning)).append("\n");
    sb.append("    followRedirects: ").append(toIndentedString(followRedirects)).append("\n");
    sb.append("    honorLabels: ").append(toIndentedString(honorLabels)).append("\n");
    sb.append("    honorTimestamps: ").append(toIndentedString(honorTimestamps)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    metricRelabelings: ").append(toIndentedString(metricRelabelings)).append("\n");
    sb.append("    oauth2: ").append(toIndentedString(oauth2)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    proxyUrl: ").append(toIndentedString(proxyUrl)).append("\n");
    sb.append("    relabelings: ").append(toIndentedString(relabelings)).append("\n");
    sb.append("    scheme: ").append(toIndentedString(scheme)).append("\n");
    sb.append("    scrapeTimeout: ").append(toIndentedString(scrapeTimeout)).append("\n");
    sb.append("    targetPort: ").append(toIndentedString(targetPort)).append("\n");
    sb.append("    tlsConfig: ").append(toIndentedString(tlsConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("authorization");
    openapiFields.add("basicAuth");
    openapiFields.add("bearerTokenSecret");
    openapiFields.add("enableHttp2");
    openapiFields.add("filterRunning");
    openapiFields.add("followRedirects");
    openapiFields.add("honorLabels");
    openapiFields.add("honorTimestamps");
    openapiFields.add("interval");
    openapiFields.add("metricRelabelings");
    openapiFields.add("oauth2");
    openapiFields.add("params");
    openapiFields.add("path");
    openapiFields.add("port");
    openapiFields.add("proxyUrl");
    openapiFields.add("relabelings");
    openapiFields.add("scheme");
    openapiFields.add("scrapeTimeout");
    openapiFields.add("targetPort");
    openapiFields.add("tlsConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1PodMonitorSpecPodMetricsEndpointsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1PodMonitorSpecPodMetricsEndpointsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1PodMonitorSpecPodMetricsEndpointsInner is not found in the empty JSON string", V1PodMonitorSpecPodMetricsEndpointsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1PodMonitorSpecPodMetricsEndpointsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1PodMonitorSpecPodMetricsEndpointsInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `authorization`
      if (jsonObj.get("authorization") != null && !jsonObj.get("authorization").isJsonNull()) {
        V1PodMonitorSpecPodMetricsEndpointsInnerAuthorization.validateJsonObject(jsonObj.getAsJsonObject("authorization"));
      }
      // validate the optional field `basicAuth`
      if (jsonObj.get("basicAuth") != null && !jsonObj.get("basicAuth").isJsonNull()) {
        V1PodMonitorSpecPodMetricsEndpointsInnerBasicAuth.validateJsonObject(jsonObj.getAsJsonObject("basicAuth"));
      }
      // validate the optional field `bearerTokenSecret`
      if (jsonObj.get("bearerTokenSecret") != null && !jsonObj.get("bearerTokenSecret").isJsonNull()) {
        V1PodMonitorSpecPodMetricsEndpointsInnerBearerTokenSecret.validateJsonObject(jsonObj.getAsJsonObject("bearerTokenSecret"));
      }
      if ((jsonObj.get("interval") != null && !jsonObj.get("interval").isJsonNull()) && !jsonObj.get("interval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interval").toString()));
      }
      if (jsonObj.get("metricRelabelings") != null && !jsonObj.get("metricRelabelings").isJsonNull()) {
        JsonArray jsonArraymetricRelabelings = jsonObj.getAsJsonArray("metricRelabelings");
        if (jsonArraymetricRelabelings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("metricRelabelings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `metricRelabelings` to be an array in the JSON string but got `%s`", jsonObj.get("metricRelabelings").toString()));
          }

          // validate the optional field `metricRelabelings` (array)
          for (int i = 0; i < jsonArraymetricRelabelings.size(); i++) {
            V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner.validateJsonObject(jsonArraymetricRelabelings.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `oauth2`
      if (jsonObj.get("oauth2") != null && !jsonObj.get("oauth2").isJsonNull()) {
        V1PodMonitorSpecPodMetricsEndpointsInnerOauth2.validateJsonObject(jsonObj.getAsJsonObject("oauth2"));
      }
      if ((jsonObj.get("path") != null && !jsonObj.get("path").isJsonNull()) && !jsonObj.get("path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path").toString()));
      }
      if ((jsonObj.get("port") != null && !jsonObj.get("port").isJsonNull()) && !jsonObj.get("port").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `port` to be a primitive type in the JSON string but got `%s`", jsonObj.get("port").toString()));
      }
      if ((jsonObj.get("proxyUrl") != null && !jsonObj.get("proxyUrl").isJsonNull()) && !jsonObj.get("proxyUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proxyUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proxyUrl").toString()));
      }
      if (jsonObj.get("relabelings") != null && !jsonObj.get("relabelings").isJsonNull()) {
        JsonArray jsonArrayrelabelings = jsonObj.getAsJsonArray("relabelings");
        if (jsonArrayrelabelings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("relabelings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `relabelings` to be an array in the JSON string but got `%s`", jsonObj.get("relabelings").toString()));
          }

          // validate the optional field `relabelings` (array)
          for (int i = 0; i < jsonArrayrelabelings.size(); i++) {
            V1PodMonitorSpecPodMetricsEndpointsInnerMetricRelabelingsInner.validateJsonObject(jsonArrayrelabelings.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("scheme") != null && !jsonObj.get("scheme").isJsonNull()) && !jsonObj.get("scheme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scheme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scheme").toString()));
      }
      if ((jsonObj.get("scrapeTimeout") != null && !jsonObj.get("scrapeTimeout").isJsonNull()) && !jsonObj.get("scrapeTimeout").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scrapeTimeout` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scrapeTimeout").toString()));
      }
      // validate the optional field `tlsConfig`
      if (jsonObj.get("tlsConfig") != null && !jsonObj.get("tlsConfig").isJsonNull()) {
        V1PodMonitorSpecPodMetricsEndpointsInnerTlsConfig.validateJsonObject(jsonObj.getAsJsonObject("tlsConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1PodMonitorSpecPodMetricsEndpointsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1PodMonitorSpecPodMetricsEndpointsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1PodMonitorSpecPodMetricsEndpointsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1PodMonitorSpecPodMetricsEndpointsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<V1PodMonitorSpecPodMetricsEndpointsInner>() {
           @Override
           public void write(JsonWriter out, V1PodMonitorSpecPodMetricsEndpointsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1PodMonitorSpecPodMetricsEndpointsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1PodMonitorSpecPodMetricsEndpointsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1PodMonitorSpecPodMetricsEndpointsInner
  * @throws IOException if the JSON string is invalid with respect to V1PodMonitorSpecPodMetricsEndpointsInner
  */
  public static V1PodMonitorSpecPodMetricsEndpointsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1PodMonitorSpecPodMetricsEndpointsInner.class);
  }

 /**
  * Convert an instance of V1PodMonitorSpecPodMetricsEndpointsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

